import{_ as s,o as n,c as t,f as p,a,d as e,b as o}from"./app-54d9b3e6.js";const c={},l=a("h1",{id:"权限",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#权限","aria-hidden":"true"},"#"),e(" 权限")],-1),u=a("p",null,"项目提供了开箱即用的权限控制，包括路由、菜单权限和页面元素级的细粒度权限控制。",-1),i=a("p",null,"并提供两种权限控制方案：基于角色、基于权限标识。",-1),k=o(`<h2 id="基于角色编码" tabindex="-1"><a class="header-anchor" href="#基于角色编码" aria-hidden="true">#</a> 基于角色编码</h2><h3 id="页面权限" tabindex="-1"><a class="header-anchor" href="#页面权限" aria-hidden="true">#</a> 页面权限</h3><p>基于角色编码的路由权限控制是使用路由信息中的<code>meta.roles</code>与用户信息中的<code>roles</code>进行比对，不匹配的路由的<code>component</code>会被动态修改为<code>/src/views/error-page/NotPermission.vue</code>组件。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p><code>meta.roles</code>的属性值可以为数组或字符串，可以使用通配符。</p><p>如果不设置路由的<code>meta.roles</code>，则此路由不会被权限控制。</p><p>如果设置了<code>meta.roles</code>的属性值为空数组，所有人都没有权限访问此路由。</p></div><h3 id="元素级权限" tabindex="-1"><a class="header-anchor" href="#元素级权限" aria-hidden="true">#</a> 元素级权限</h3><h4 id="指令方式" tabindex="-1"><a class="header-anchor" href="#指令方式" aria-hidden="true">#</a> 指令方式</h4><div class="language-html" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">v-hasRole</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>admin&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> admin角色可见 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">v-hasRole:</span>or</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[&#39;admin&#39;,&#39;*_test&#39;]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> admin或以_test结尾角色可见 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-hasRole:</span>all</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[&#39;admin&#39;,&#39;test&#39;]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> admin且test角色可见 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="custom-container tip"><p class="custom-container-title">提示</p><ul><li><p>v-hasRole:or --&gt; 值可以为字符串和数组，角色值匹配其一就显示组件/标签</p></li><li><p>v-hasRole:all --&gt; 值只可以是数组，角色值全部包含才显示组件/标签</p></li><li><p>v-hasRole --&gt; v-hasRole:or 的简写</p></li></ul></div><h4 id="函数方式" tabindex="-1"><a class="header-anchor" href="#函数方式" aria-hidden="true">#</a> 函数方式</h4><div class="language-vue" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hasRole(&#39;admin&#39;)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>admin角色可见<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hasRole([&#39;admin&#39;, &#39;test&#39;])<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>admin或test角色可见<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hasRoleAll([&#39;admin&#39;, &#39;test&#39;])<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>admin且test角色可见<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> useAuth <span class="token keyword">from</span> <span class="token string">&#39;@/hooks/useAuth&#39;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> hasRole<span class="token punctuation">,</span>hasRoleAll <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="custom-container tip"><p class="custom-container-title">提示</p><ul><li><p>hasRole(val: String | Array) --&gt; 当前用户角色与 val 值匹配其一即为 true。</p></li><li><p>hasRoleAll(arr: Array) --&gt; 当前用户角色必须包含 arr 中的所有值才为 true</p></li></ul></div><h2 id="基于权限标识符" tabindex="-1"><a class="header-anchor" href="#基于权限标识符" aria-hidden="true">#</a> 基于权限标识符</h2><h3 id="页面权限-1" tabindex="-1"><a class="header-anchor" href="#页面权限-1" aria-hidden="true">#</a> 页面权限</h3><p>此项目没有基于权限标识符对路由及菜单进行过滤，推荐接入后端时在对应的获取路由的接口中处理，将处理后的路由结果响应给前端。</p><h3 id="按钮级权限" tabindex="-1"><a class="header-anchor" href="#按钮级权限" aria-hidden="true">#</a> 按钮级权限</h3><h4 id="指令方式-1" tabindex="-1"><a class="header-anchor" href="#指令方式-1" aria-hidden="true">#</a> 指令方式</h4><div class="language-html" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">v-hasPerm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>sys:menu:add&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 拥有 sys:menu:add 权限标识码的用户可见 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">v-hasPerm:</span>or</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[&#39;add&#39;,&#39;del&#39;]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 拥有 add 或 del 权限标识码的用户可见 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">v-hasPerm:</span>all</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[&#39;add&#39;,&#39;del&#39;]<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 拥有 add 且 del 权限标识码的用户可见 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="custom-container tip"><p class="custom-container-title">提示</p><ul><li><p>v-hasPerm:or --&gt; 值可以为字符串和数组，权限标识码匹配其一就显示组件/标签</p></li><li><p>v-hasPerm:all --&gt; 值只可以是数组，权限标识码全部包含才显示组件/标签</p></li><li><p>v-hasPerm --&gt; v-hasPerm:or 的简写</p></li></ul></div><h4 id="函数方式-1" tabindex="-1"><a class="header-anchor" href="#函数方式-1" aria-hidden="true">#</a> 函数方式</h4><div class="language-vue" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-button</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hasPerm(&#39;addButton&#39;)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 拥有 addButton 权限标识码的用户可见 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hasPerm([&#39;menu:del&#39;, &#39;menu:add&#39;])<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 拥有 menu:del 或 menu:add 权限标识码的用户可见 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hasPermAll([&#39;menu&#39;, &#39;menu:add&#39;])<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 拥有 menu 且有 menu:add 权限标识码的用户可见 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> useAuth <span class="token keyword">from</span> <span class="token string">&#39;@/hooks/useAuth&#39;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> hasPerm<span class="token punctuation">,</span>hasPermAll <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="custom-container tip"><p class="custom-container-title">提示</p><ul><li><p>hasPerm(val: String | Array) --&gt; 当前用户权限标识码与 val 值匹配其一即为 true</p></li><li><p>hasPermAll(arr: Array) --&gt; 当前用户权限标识码必须包含 arr 中的所有值才为 true</p></li></ul></div><h2 id="通配符" tabindex="-1"><a class="header-anchor" href="#通配符" aria-hidden="true">#</a> 通配符</h2><p>支持字符串通配符匹配校验</p><p>? 字符匹配任何单个字符。</p><p>* 字符匹配任何字符序列。</p><div class="language-vue" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-hasPerm</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>*&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 所有权限可见 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
......
</code></pre></div>`,26);function r(d,g){return n(),t("div",null,[l,u,i,p(` ::: tip 提示
阅读本章之前建议请先了解此文档的[路由meta信息](./menu-route.md/#meta配置)和[用户信息](./user-info.md)
::: `),k])}const m=s(c,[["render",r],["__file","permission.html.vue"]]);export{m as default};
