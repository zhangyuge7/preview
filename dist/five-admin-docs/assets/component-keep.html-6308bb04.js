import{_ as p,r as o,o as c,c as l,a as s,b as n,d as t,e}from"./app-2c78fe49.js";const u={},r=s("h1",{id:"页面缓存",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#页面缓存","aria-hidden":"true"},"#"),n(" 页面缓存")],-1),i={href:"https://cn.vuejs.org/guide/built-ins/keep-alive.html",target:"_blank",rel:"noopener noreferrer"},k={href:"https://cn.vuejs.org/guide/built-ins/keep-alive.html",target:"_blank",rel:"noopener noreferrer"},m=e(`<div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;home&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Home&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 路由的 name 属性</span>
    <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;首页&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">isKeep</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 开启页面缓存</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@/views/Home.vue&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 入口1</span>
    <span class="token comment">// component: () =&gt; import(&#39;@/views/home/index.vue&#39;), // 入口2</span>
<span class="token punctuation">}</span>
</code></pre></div><p>开启页面缓存不仅需要将路由的 meta.isKeep 属性值设置为 true，还需要 component 的组件名要与 name 属性值相同。</p><p>入口1：如果 component 的组件文件名正好和路由的 name 属性值相同，那么不需要其他操作，这个路由页面已开启缓存。因为在 Vue 3.2.34 或以上的版本中，使用 &lt;script setup&gt; 的单文件组件会自动根据文件名生成对应的 name 选项</p>`,3),g={href:"https://cn.vuejs.org/",target:"_blank",rel:"noopener noreferrer"},d={href:"https://www.npmjs.com/package/vite-plugin-vue-setup-extend-plus",target:"_blank",rel:"noopener noreferrer"},v=e(`<h2 id="实现逻辑" tabindex="-1"><a class="header-anchor" href="#实现逻辑" aria-hidden="true">#</a> 实现逻辑</h2><div class="language-vue" data-ext="vue"><pre class="language-vue"><code>// /src/layout/main/LayoutMain.vue 删减后的代码

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> RouterView <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-router&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useRouteStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/stores/modules/route&#39;</span>

<span class="token keyword">const</span> routeStore <span class="token operator">=</span> <span class="token function">useRouteStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RouterView</span> <span class="token attr-name">v-slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ Component}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>KeepAlive</span> <span class="token attr-name">:include</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>routeStore.keepAliveViews<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Component</span> <span class="token attr-name">:is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Component<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>KeepAlive</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RouterView</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><ol><li><p>使用 &lt;KeepAlive&gt; 内置组件将动态组件包装起来。</p></li><li><p>在路由加载时遍历路由，将 meta.isKeep 属性值为 true 的路由名称（name 属性值）保存到数据仓库。</p></li><li><p>使用 &lt;KeepAlive&gt; 的 include 属性定制缓存行为</p></li></ol>`,3);function h(_,f){const a=o("ExternalLinkIcon");return c(),l("div",null,[r,s("p",null,[n("FiveAdmin 使用 "),s("a",i,[n("KeepAlive"),t(a)]),n(" 实现页面缓存效果。不依赖多标签页，无论是否开启多标签页功能对页面缓存没有任何影响。")]),s("p",null,[n("FiveAdmin 通过 KeepAlive 的 include 来定制缓存行为。页面默认不缓存，是否缓存由路由的 meta.isKeep 的属性值决定。不过要注意的是，配置的路由 name 属性要和组件的名称相同，至于为什么要这样做请查看 "),s("a",k,[n("KeepAlive"),t(a)]),n(" 了解更多信息。")]),m,s("p",null,[n("入口2：如果一个页面需要多个组件组合使用，作者喜欢将页面的入口文件名定义为 index.vue ，一个项目中文件名为 index.vue 的文件有很多，那么这些像这种组件的组件名就是 index ，建议显式声明组件名。如何显式声明组件名请查看 "),s("a",g,[n("vue 官方文档"),t(a)]),n("或自行百度。使用 setup 语法糖时如何显式声明组件名称？FiveAdmin 已集成 "),s("a",d,[n("vite-plugin-vue-setup-extend-plus"),t(a)]),n(' 插件，用<script setup name="Home">在 setup 语法糖中显性声明组件名。')]),v])}const x=p(u,[["render",h],["__file","component-keep.html.vue"]]);export{x as default};
